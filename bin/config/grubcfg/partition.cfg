
function setenvpath { set "$1"="$2"; export "$1"; }

search.fs_label REFIND isodir

setenvpath images "/ISO"
setenvpath imagess "($isodir)/ISO"

configfile "${prefix}/smartfinn.cfg"

function _generate_entries {
    for file in ${images}/*.iso ${images}/*.ISO; do
        if [ ! -f "${file}" ]; then continue; fi

        regexp --set=1:filepath '(/.+)$' "$file"
        regexp --set=1:filename '^.*/(.+)$' "$file"

        if regexp "(aio-srt|AiO-SRT)" "${filename}"; then
            _entry_aiosrt ${filename} ${filepath}
        elif regexp "(boot-repair-disk|Boot-Repair-Disk)" "${filename}"; then
            _entry_bootrepairdisk ${filename} ${filepath}
        elif regexp "clonezilla" "${filename}"; then
            _entry_clonezilla ${filename} ${filepath}
        #elif regexp "(easyre|EasyRE)" "${filename}"; then
        #    _entry_easyre ${filename} ${filepath}
        #elif regexp "(easyre_w8|EasyRE_W8)" "${filename}"; then
        #    _entry_easyre_w8 ${filename} ${filepath}
        #elif regexp "(easyre_w10|EasyRE_W10)" "${filename}"; then
        #    _entry_easyre_w10 ${filename} ${filepath}
        #elif regexp "pwh" "${filename}"; then
        #    _entry_minitool ${filename} ${filepath}
        #elif regexp "prgdm" "${filename}"; then
        #    _entry_paragon ${filename} ${filepath}
        elif regexp "pmagic" "${filename}"; then
            _entry_pmagic ${filename} ${filepath}
        #elif regexp "(r-drive-image|R-Drive-Image)" "${filename}"; then
        #    _entry_rdriveimage ${filename} ${filepath}
        #elif regexp "(systemrescuecd|sysresccd)" "${filename}"; then
        #    _entry_systemrescuecd ${filename} ${filepath}
        #elif regexp "prgdm" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "easus" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "activeboot10" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "Boot_Genius" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "elcomsoft" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "MSDART" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "ati10" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "ati17" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "add12" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "Ghost" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "ActivePasswordChanger5" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "GoldMem" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        #elif regexp "hdat2_51" "${filename}"; then
        #    _entry_grub4dos ${filename} ${filepath}
        fi
    done
}

menuentry "return to main menu" --class arrow-left {
    echo "return to main menu"
    configfile "${prefix}/main.cfg"
}

_generate_entries

if [ -e "/ISO_Extract/SystemRescueCD/BOOT/X86_64/VMLINUZ" ]; then
    menuentry "System Rescue CD (default options)" --class systemrescuecd {
        set gfxpayload=keep
        linux /ISO_Extract/SystemRescueCD/boot/x86_64/vmlinuz archisobasedir=/ISO_Extract/SystemRescueCD null=resccd archisolabel=MULTIBOOT null=603 setkmap=us rootpass=rescue
        initrd /ISO_Extract/SystemRescueCD/boot/intel_ucode.img /ISO_Extract/SystemRescueCD/boot/amd_ucode.img /ISO_Extract/SystemRescueCD/boot/x86_64/sysresccd.img
    }
    menuentry "System Rescue CD (copy system to RAM)" --class systemrescuecd {
        set gfxpayload=keep
        linux /ISO_Extract/SystemRescueCD/boot/x86_64/vmlinuz archisobasedir=/ISO_Extract/SystemRescueCD null=resccd archisolabel=MULTIBOOT null=603 setkmap=us rootpass=rescue copytoram
        initrd /ISO_Extract/SystemRescueCD/boot/intel_ucode.img /ISO_Extract/SystemRescueCD/boot/amd_ucode.img /ISO_Extract/SystemRescueCD/boot/x86_64/sysresccd.img
    }
fi

menuentry "return to main menu" --class arrow-left {
    echo "return to main menu"
    configfile "${prefix}/main.cfg"
}
